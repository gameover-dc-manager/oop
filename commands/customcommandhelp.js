
const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('customcommandhelp')
        .setDescription('üìö Learn how to create and use custom commands')
        .addStringOption(option =>
            option.setName('topic')
                .setDescription('Specific topic to learn about')
                .setRequired(false)
                .addChoices(
                    { name: 'Getting Started', value: 'basics' },
                    { name: 'Variables & Placeholders', value: 'variables' },
                    { name: 'Permissions & Settings', value: 'permissions' },
                    { name: 'Advanced Features', value: 'advanced' },
                    { name: 'Examples', value: 'examples' }
                )),

    async execute(interaction) {
        await interaction.deferReply({ ephemeral: true });

        const topic = interaction.options.getString('topic');

        if (!topic) {
            // Show main help menu
            const mainEmbed = new EmbedBuilder()
                .setColor('#0099FF')
                .setTitle('üìö Custom Commands Guide')
                .setDescription('Learn how to create powerful custom commands for your server!')
                .addFields(
                    {
                        name: 'üöÄ Quick Start',
                        value: 'Use `/customcommands create` to make your first custom command!\n\n**Basic Example:**\n```\nName: welcome\nResponse: Welcome {user} to {server}! üéâ\n```',
                        inline: false
                    },
                    {
                        name: 'üìã Available Topics',
                        value: '‚Ä¢ **Getting Started** - Basic command creation\n‚Ä¢ **Variables & Placeholders** - Dynamic content\n‚Ä¢ **Permissions & Settings** - Access control\n‚Ä¢ **Advanced Features** - Embeds, colors, types\n‚Ä¢ **Examples** - Ready-to-use command ideas',
                        inline: false
                    },
                    {
                        name: '‚ö° Quick Commands',
                        value: '`/customcommands create` - Create new command\n`/customcommands list` - View all commands\n`/customcommands variables` - See all variables',
                        inline: false
                    }
                )
                .setFooter({ text: 'Use the buttons below or run /customcommandhelp <topic>' })
                .setTimestamp();

            const buttons = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('cchelp_basics')
                        .setLabel('Getting Started')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üöÄ'),
                    new ButtonBuilder()
                        .setCustomId('cchelp_variables')
                        .setLabel('Variables')
                        .setStyle(ButtonStyle.Secondary)
                        .setEmoji('üîß'),
                    new ButtonBuilder()
                        .setCustomId('cchelp_examples')
                        .setLabel('Examples')
                        .setStyle(ButtonStyle.Success)
                        .setEmoji('üí°')
                );

            await interaction.editReply({ embeds: [mainEmbed], components: [buttons] });
            return;
        }

        // Show specific topic
        let embed;
        switch (topic) {
            case 'basics':
                embed = createBasicsEmbed();
                break;
            case 'variables':
                embed = createVariablesEmbed();
                break;
            case 'permissions':
                embed = createPermissionsEmbed();
                break;
            case 'advanced':
                embed = createAdvancedEmbed();
                break;
            case 'examples':
                embed = createExamplesEmbed();
                break;
            default:
                embed = createBasicsEmbed();
        }

        await interaction.editReply({ embeds: [embed] });
    }
};

function createBasicsEmbed() {
    return new EmbedBuilder()
        .setColor('#00FF00')
        .setTitle('üöÄ Getting Started with Custom Commands')
        .setDescription('Learn the basics of creating custom commands!')
        .addFields(
            {
                name: '1Ô∏è‚É£ Create Your First Command',
                value: '```\n/customcommands create\nname: hello\nresponse: Hello there, {user}!\n```\nThis creates a simple greeting command.',
                inline: false
            },
            {
                name: '2Ô∏è‚É£ Using Your Command',
                value: 'Once created, users can trigger it with:\n‚Ä¢ `!hello` (prefix)\n‚Ä¢ `/hello` (slash command)\n‚Ä¢ Or both, depending on your settings!',
                inline: false
            },
            {
                name: '3Ô∏è‚É£ Command Options',
                value: '‚Ä¢ **Name**: What users type to trigger it\n‚Ä¢ **Response**: What the bot says back\n‚Ä¢ **Description**: Helpful info about the command\n‚Ä¢ **Embed**: Make it look fancy with colors\n‚Ä¢ **Permissions**: Control who can use it',
                inline: false
            },
            {
                name: 'üí° Pro Tips',
                value: '‚Ä¢ Keep names simple and memorable\n‚Ä¢ Test your commands after creating them\n‚Ä¢ Use variables to make them dynamic\n‚Ä¢ Check `/customcommands list` to see all your commands',
                inline: false
            }
        )
        .setFooter({ text: 'Next: Learn about Variables with /customcommandhelp variables' });
}

function createVariablesEmbed() {
    return new EmbedBuilder()
        .setColor('#FF6B6B')
        .setTitle('üîß Variables & Placeholders')
        .setDescription('Make your commands dynamic with these special variables!')
        .addFields(
            {
                name: 'üë§ User Variables',
                value: '`{user}` - Mentions the user\n`{username}` - User\'s name\n`{usernickname}` - Server nickname\n`{userid}` - User\'s ID number',
                inline: true
            },
            {
                name: 'üè† Server Variables',
                value: '`{server}` - Server name\n`{membercount}` - Total members\n`{channelcount}` - Total channels\n`{serverid}` - Server ID',
                inline: true
            },
            {
                name: 'üì± Channel Variables',
                value: '`{channel}` - Current channel\n`{channelname}` - Channel name\n`{channelid}` - Channel ID',
                inline: true
            },
            {
                name: '‚è∞ Time Variables',
                value: '`{date}` - Current date\n`{time}` - Current time\n`{timestamp}` - Unix timestamp',
                inline: true
            },
            {
                name: 'üé≤ Random Variables',
                value: '`{random:1-100}` - Random number\n`{choice:yes,no,maybe}` - Random choice\n`{choice:pizza,burgers,tacos}` - Pick food',
                inline: true
            },
            {
                name: '‚ú® Example Usage',
                value: '```\nWelcome {user} to {server}!\nYou are member #{membercount}.\nIt\'s {time} on {date}.\nYour lucky number is {random:1-100}!\n```',
                inline: false
            }
        )
        .setFooter({ text: 'Try: {choice:red,blue,green} or {random:1-10} in your commands!' });
}

function createPermissionsEmbed() {
    return new EmbedBuilder()
        .setColor('#FFA500')
        .setTitle('üîê Permissions & Settings')
        .setDescription('Control who can use your commands and how they work!')
        .addFields(
            {
                name: 'üë• Permission Levels',
                value: '‚Ä¢ **Everyone** - Anyone can use\n‚Ä¢ **Manage Messages** - Moderators\n‚Ä¢ **Manage Channels** - Channel managers\n‚Ä¢ **Manage Guild** - Admins\n‚Ä¢ **Administrator** - Full admins only',
                inline: false
            },
            {
                name: '‚öôÔ∏è Command Types',
                value: '‚Ä¢ **Both** - Works with `!command` and `/command`\n‚Ä¢ **Prefix Only** - Only `!command`\n‚Ä¢ **Slash Only** - Only `/command`',
                inline: false
            },
            {
                name: 'üé® Customization Options',
                value: '‚Ä¢ **Embed**: Makes responses look fancy\n‚Ä¢ **Color**: Custom hex colors like `#FF0000`\n‚Ä¢ **Prefix**: Change from `!` to `.` or `?`',
                inline: false
            },
            {
                name: 'üîß Management Commands',
                value: '‚Ä¢ `/customcommands toggle` - Enable/disable\n‚Ä¢ `/customcommands edit` - Modify existing\n‚Ä¢ `/customcommands delete` - Remove command\n‚Ä¢ `/customcommands info` - View details',
                inline: false
            }
        )
        .setFooter({ text: 'Tip: Start with "everyone" permissions, then restrict as needed' });
}

function createAdvancedEmbed() {
    return new EmbedBuilder()
        .setColor('#9B59B6')
        .setTitle('‚ö° Advanced Features')
        .setDescription('Take your custom commands to the next level!')
        .addFields(
            {
                name: 'üé® Embed Styling',
                value: '‚Ä¢ Use embed mode for beautiful responses\n‚Ä¢ Set custom colors with hex codes\n‚Ä¢ Embeds automatically include timestamps\n‚Ä¢ Perfect for announcements and info',
                inline: false
            },
            {
                name: 'üî¢ Random Features',
                value: '```\n{random:1-6} - Dice roll\n{random:1-100} - Percentage\n{choice:heads,tails} - Coin flip\n{choice:rock,paper,scissors} - RPS\n```',
                inline: false
            },
            {
                name: 'üìä Usage Tracking',
                value: '‚Ä¢ Every command tracks how many times it\'s used\n‚Ä¢ View stats with `/customcommands info`\n‚Ä¢ See all commands with `/customcommands list`\n‚Ä¢ Monitor popular commands',
                inline: false
            },
            {
                name: 'üîß Command Prefixes',
                value: 'Set custom prefixes for different command groups:\n‚Ä¢ `!` for general commands\n‚Ä¢ `.` for fun commands\n‚Ä¢ `?` for help commands\n‚Ä¢ `>` for admin commands',
                inline: false
            }
        )
        .setFooter({ text: 'Experiment with different combinations to create unique commands!' });
}

function createExamplesEmbed() {
    return new EmbedBuilder()
        .setColor('#00FFFF')
        .setTitle('üí° Custom Command Examples')
        .setDescription('Ready-to-use command ideas you can copy!')
        .addFields(
            {
                name: 'üéâ Welcome Command',
                value: '```\nName: welcome\nResponse: Welcome {user} to {server}! üéâ\nWe now have {membercount} members!\nEnjoy your stay in {channel}!\n```',
                inline: false
            },
            {
                name: 'üé≤ Random Picker',
                value: '```\nName: pick\nResponse: üéØ I choose: {choice:option1,option2,option3}\nReplace options with your choices!\n```',
                inline: false
            },
            {
                name: 'üçï Food Suggestion',
                value: '```\nName: food\nResponse: üçΩÔ∏è How about {choice:pizza,burgers,sushi,tacos,pasta,salad}?\nPerfect for {time} on {date}!\n```',
                inline: false
            },
            {
                name: 'üìä Server Info',
                value: '```\nName: serverinfo\nResponse: üìà {server} Stats:\nüë• Members: {membercount}\nüí¨ Channels: {channelcount}\nüìÖ Today: {date}\n```',
                inline: false
            },
            {
                name: 'üéÆ Dice Roll',
                value: '```\nName: roll\nResponse: üé≤ {user} rolled: {random:1-6}\nüçÄ Lucky number: {random:1-100}\n```',
                inline: false
            },
            {
                name: 'üíù Compliment Generator',
                value: '```\nName: compliment\nResponse: üíù {user}, you are {choice:amazing,awesome,fantastic,incredible,wonderful}!\nHave a {choice:great,fantastic,amazing,wonderful} day!\n```',
                inline: false
            }
        )
        .setFooter({ text: 'Copy these examples and customize them for your server!' });
}
